generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Customer {
  id           Int          @id @default(autoincrement())
  name         String
  sureName     String


  customerType CustomerType
  dailyPass  DailyPass?
  membership  Membership?

  @@map("customer")
}

model Membership {
  id             Int               @id @default(autoincrement())
  customerId     Int               @unique
  servicePriceId Int    
  email          String?           
  phone          String?
  startDate      DateTime
  endDate        DateTime
  dni            String   
  monthsToPay    Int
  totalAmout     Float

  status         MembershipStatus @default(ACTIVO)

  customer       Customer          @relation(fields: [customerId], references: [id])
  servicePrice   ServicePrices     @relation(fields: [servicePriceId], references: [id])
  


  @@map("membership")
}

model DailyPass {
  id             Int               @id @default(autoincrement())
  customerId     Int               @unique
  servicePriceId Int               
  accessDate     DateTime          @default(now())

  customer       Customer          @relation(fields: [customerId], references: [id])
  servicePrice   ServicePrices     @relation(fields: [servicePriceId], references: [id])

  @@map("dailypass")
}

model ServicePrices {
  id          Int              @id @default(autoincrement())
  serviceId Int
  monto Float
  fecha DateTime

  service Services @relation(fields: [serviceId], references: [id])
  dailyPasses DailyPass[]
  memberships Membership[]

  @@map("service_prices")
}

model Services {
  id Int                        @id @default(autoincrement())
  serviceName String

  servicePrices ServicePrices[]

  @@map("services")
}

enum CustomerType {
  MEMBRESIA
  PASE_DIARIO
}

enum MembershipStatus {
  ACTIVO
  CANCELADO
  VENCIDA
}
